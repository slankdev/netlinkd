/*
 * cplane_netdev.api - binary API cplane_netdev plugin
 *
 * Copyright (c) 2019 Hiroki Shirokrua
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @file cplane_netdev.api
 * @brief VPP control-plane netdev API messages.
 * This file defines VPP control-plane binary API messages which are generally
 * called through a shared memory interface.
 */

/* Version and type recitations */
option version = "0.1.0";
import "vnet/interface_types.api";

/** @brief enable/disable tap-inject
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param is_enable - bool value
*/
autoreply define tap_inject_enable_disable {
  u32 client_index;
  u32 context;
  bool is_enable;
};

/** @brief Dump tap-inject information
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
*/
define tap_inject_dump {
  u32 client_index;
  u32 context;
};

/** \brief Dump details of tap-inject information
    @param context - sender context, to match reply w/ request
    @param sw_if_index - software index of the interface
    @param sw_if_index - interface index of vpp's network interface
    @param kernel_if_index - interface index of kernel's network interface
*/
define tap_inject_details {
  u32 client_index;
  u32 context;
	u32 sw_if_index;
	u32 kernel_if_index;
};

